package com.rescam.xhb.framework.action;

import java.util.List;

import net.sf.json.JSONObject;

import com.opensymphony.xwork2.ModelDriven;
import com.rescam.xhb.common.action.BasicAction;
import com.rescam.xhb.framework.entity.Customer;
import com.rescam.xhb.framework.entity.CustomerCard;
import com.rescam.xhb.framework.service.CustomerCardService;
import com.rescam.xhb.framework.service.CustomerService;

@SuppressWarnings("serial")
public class CustomerAction extends BasicAction implements
		ModelDriven<Customer> {

	private Customer customer = new Customer();
	private int cardType;
	private String cardNumber;
	private CustomerService customerService;
	private CustomerCardService customerCardService;

	private JSONObject jsonObj;

	@Override
	public Customer getModel() {
		return customer;
	}

	public JSONObject getJsonObj() {
		return jsonObj;
	}

	public void setJsonObj(JSONObject jsonObj) {
		this.jsonObj = jsonObj;
	}

	public int getCardType() {
		return cardType;
	}

	public void setCardType(int cardType) {
		this.cardType = cardType;
	}

	public String getCardNumber() {
		return cardNumber;
	}

	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}

	public CustomerService getCustomerService() {
		return customerService;
	}

	public void setCustomerService(CustomerService customerService) {
		this.customerService = customerService;
	}

	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	public CustomerCardService getCustomerCardService() {
		return customerCardService;
	}

	public void setCustomerCardService(CustomerCardService customerCardService) {
		this.customerCardService = customerCardService;
	}

	public String init() {
		// 1、根据微信号判断用户是否已经存在
		// 如果存在，直接登录
		// 如果不存在，跳转到注册页

		// if (findweixinId(getweixinId())) {
		// denglu();
		// }
		return "init";
	}

	@SuppressWarnings("rawtypes")
	public String register() {
		jsonObj = new JSONObject();
		customer.setCustomerStatus("0"); // 账户状态
		customer.setWalletAccount("随机数"); // 虚拟账户
		customer.setWalletBalance(0.0); // 余额
		customer.setDeliveryAddressCount(0); // 保存地址数量
		customerService.saveEntity(customer);
		if (cardType != 0) {
			List list = customerService
					.findBySql("select id from customer where customer_phone = '"
							+ customer.getCustomerPhone() + "'");
			if (list == null || list.size() == 0) {
				jsonObj.put("result", "1");
				return SUCCESS;
			}
			int id = Integer.parseInt(String.valueOf(list.get(0)));
			CustomerCard card = new CustomerCard();
			card.setCustomerId(id);
			card.setCardNumber(cardNumber);
			card.setCardType(String.valueOf(cardType));
			customerCardService.saveEntity(card);
			System.out.println("sss" + card);
		}
		jsonObj.put("result", "page_goodsList.html");
		return SUCCESS;
	}
}
